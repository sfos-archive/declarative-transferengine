import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable Sailfish.Share 1.0'

Module {
    dependencies: ["QtQuick 2.0"]
    Component {
        name: "ShareAction"
        prototype: "QObject"
        exports: ["Sailfish.Share/ShareAction 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "resources"; type: "QVariantList" }
        Property { name: "mimeType"; type: "string" }
        Property { name: "title"; type: "string" }
        Property { name: "selectedTransferMethodInfo"; type: "QVariantMap" }
        Signal { name: "done" }
        Method { name: "trigger" }
        Method {
            name: "loadConfiguration"
            Parameter { name: "configuration"; type: "QVariantMap" }
        }
        Method { name: "toConfiguration"; type: "QVariantMap" }
        Method { name: "replaceFileResourcesWithFileDescriptors" }
        Method {
            name: "writeContentToFile"
            type: "string"
            Parameter { name: "contents"; type: "QVariantMap" }
            Parameter { name: "maximumFileSize"; type: "int" }
        }
        Method {
            name: "writeContentToFile"
            type: "string"
            Parameter { name: "contents"; type: "QVariantMap" }
        }
        Method {
            name: "removeFilesAndRmdir"
            Parameter { name: "files"; type: "QStringList" }
        }
    }
    Component {
        name: "ShareProvider"
        prototype: "QObject"
        exports: ["Sailfish.Share/ShareProvider 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "method"; type: "string" }
        Property { name: "registerName"; type: "bool" }
        Property { name: "capabilities"; type: "QStringList" }
        Signal {
            name: "triggered"
            Parameter { name: "resources"; type: "QVariantList" }
        }
    }
    Component {
        name: "ShareResource"
        prototype: "QObject"
        exports: ["Sailfish.Share/ShareResource 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "ResourceType"
            values: {
                "StringDataType": 1,
                "FilePathType": 2
            }
        }
        Property { name: "type"; type: "ResourceType"; isReadonly: true }
        Property { name: "name"; type: "string"; isReadonly: true }
        Property { name: "data"; type: "string"; isReadonly: true }
        Property { name: "filePath"; type: "string"; isReadonly: true }
    }
}
