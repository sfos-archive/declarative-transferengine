import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable -noinstantiate -nocomposites -dependencies dependencies.json Sailfish.TransferEngine 1.0'

Module {
    dependencies: [
        "Amber.Mpris 1.0",
        "MeeGo.Connman 0.2",
        "MeeGo.QOfono 0.2",
        "Nemo.Configuration 1.0",
        "Nemo.DBus 2.0",
        "Nemo.FileManager 1.0",
        "Nemo.KeepAlive 1.2",
        "Nemo.Mce 1.0",
        "Nemo.Notifications 1.0",
        "Nemo.Policy 1.0",
        "Nemo.Thumbnailer 1.0",
        "Nemo.Time 1.0",
        "QtDocGallery 5.0",
        "QtGraphicalEffects 1.0",
        "QtGraphicalEffects.private 1.0",
        "QtMultimedia 5.6",
        "QtQml 2.2",
        "QtQml.Models 2.2",
        "QtQuick 2.6",
        "QtQuick.Window 2.1",
        "Sailfish.AccessControl 1.0",
        "Sailfish.Ambience 1.0",
        "Sailfish.FileManager 1.0",
        "Sailfish.Gallery 1.0",
        "Sailfish.Gallery.private 1.0",
        "Sailfish.Lipstick 1.0",
        "Sailfish.Media 1.0",
        "Sailfish.Pickers 1.0",
        "Sailfish.Policy 1.0",
        "Sailfish.Share 1.0",
        "Sailfish.Silica 1.0",
        "Sailfish.Silica.Background 1.0",
        "Sailfish.Silica.private 1.0",
        "Sailfish.Telephony 1.0",
        "Sailfish.Timezone 1.0",
        "com.jolla.settings 1.0",
        "com.jolla.settings.system 1.0",
        "org.nemomobile.configuration 1.0",
        "org.nemomobile.dbus 2.0",
        "org.nemomobile.devicelock 1.0",
        "org.nemomobile.lipstick 0.1",
        "org.nemomobile.notifications 1.0",
        "org.nemomobile.ofono 1.0",
        "org.nemomobile.systemsettings 1.0",
        "org.nemomobile.time 1.0",
        "org.nemomobile.transferengine 1.0"
    ]
    Component {
        name: "DeclarativeSharingMethodsModel"
        prototype: "QAbstractListModel"
        exports: ["Sailfish.TransferEngine/SailfishSharingMethodsModel 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "count"; type: "int"; isReadonly: true }
        Property { name: "ready"; type: "bool"; isReadonly: true }
        Property { name: "filterByMultipleFileSupport"; type: "bool" }
        Property { name: "mimeTypeFilter"; type: "string" }
        Signal { name: "rowCountChanged" }
        Method {
            name: "get"
            type: "QVariantMap"
            Parameter { name: "index"; type: "int" }
        }
    }
    Component {
        name: "DeclarativeTransfer"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["Sailfish.TransferEngine/SailfishTransfer 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Status"
            values: {
                "NotStarted": 1,
                "TransferStarted": 2,
                "TransferCanceled": 3,
                "TransferFinished": 4,
                "TransferInterrupted": 5
            }
        }
        Property { name: "source"; type: "QUrl" }
        Property { name: "content"; type: "QVariantMap" }
        Property { name: "mimeType"; type: "string" }
        Property { name: "userData"; type: "QVariantMap" }
        Property { name: "metadataStripped"; type: "bool" }
        Property { name: "notificationsEnabled"; type: "bool" }
        Property { name: "transferMethodInfo"; type: "QVariantMap" }
        Property { name: "progress"; type: "float"; isReadonly: true }
        Property { name: "status"; type: "Status"; isReadonly: true }
        Signal { name: "serviceIdChanged" }
        Signal {
            name: "progressChanged"
            Parameter { name: "progress"; type: "float" }
        }
        Signal {
            name: "statusChanged"
            Parameter { name: "status"; type: "Status" }
        }
        Method {
            name: "loadConfiguration"
            Parameter { name: "shareActionConfiguration"; type: "QVariantMap" }
        }
        Method { name: "start" }
        Method { name: "cancel" }
    }
    Component {
        name: "DeclarativeTransferInterface"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["Sailfish.TransferEngine/SailfishTransferInterface 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Status"
            values: {
                "TransferFinished": 4,
                "TransferCanceled": 3,
                "TransferInterrupted": 5
            }
        }
        Property { name: "enableNotifications"; type: "bool" }
        Signal { name: "notificationsChanged" }
        Method {
            name: "cbCancelTransfer"
            Parameter { name: "transferId"; type: "int" }
        }
        Method {
            name: "cbRestartTransfer"
            Parameter { name: "transferId"; type: "int" }
        }
        Method {
            name: "clearTransfer"
            Parameter { name: "transferId"; type: "int" }
        }
        Method { name: "clearTransfers" }
        Method {
            name: "startTransfer"
            Parameter { name: "transferId"; type: "int" }
        }
        Method {
            name: "createDownloadEvent"
            type: "int"
            Parameter { name: "displayName"; type: "string" }
            Parameter { name: "applicationIcon"; type: "QUrl" }
            Parameter { name: "serviceIcon"; type: "QUrl" }
            Parameter { name: "url"; type: "QUrl" }
            Parameter { name: "mimeType"; type: "string" }
            Parameter { name: "expectedFileSize"; type: "qulonglong" }
            Parameter { name: "callback"; type: "QStringList" }
            Parameter { name: "cancelMethod"; type: "string" }
            Parameter { name: "restartMethod"; type: "string" }
        }
        Method {
            name: "createSyncEvent"
            type: "int"
            Parameter { name: "displayName"; type: "string" }
            Parameter { name: "applicationIcon"; type: "QUrl" }
            Parameter { name: "serviceIcon"; type: "QUrl" }
            Parameter { name: "callback"; type: "QStringList" }
            Parameter { name: "cancelMethod"; type: "string" }
            Parameter { name: "restartMethod"; type: "string" }
        }
        Method {
            name: "updateTransferProgress"
            Parameter { name: "transferId"; type: "int" }
            Parameter { name: "progress"; type: "float" }
        }
        Method {
            name: "finishTransfer"
            Parameter { name: "transferId"; type: "int" }
            Parameter { name: "status"; type: "Status" }
            Parameter { name: "reason"; type: "string" }
        }
    }
}
